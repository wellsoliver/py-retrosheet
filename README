An evolution of the original py-retrosheet script from:
https://github.com/wellsoliver/py-retrosheet

With some improvements
-SQLite3 support: Use 'sqlite' as your engine name in the config
-Optional logging to terminal
-Bugfixes (exception to deal with extra .ROS files that are generated)
-Retrosheet files are no longer downloaded to temp dir so they can be used without having to download again if something fails during parsing
-Split script into download & parsing scripts to make things easier if something fails during parsing

Original project from this post: http://blog.wellsoliver.com/2009/06/retrosheet


YE REQUIREMENTS
-
Chadwick 0.5.3: http://chadwick.sourceforge.net/
python 2.5+ (don't know about 3.0, sorry)
sqlalchemy: http://www.sqlalchemy.org/

1. create database called 'retrosheet'
2. add schema to the database w/ the included SQL script (the .postgres.sql one works nicely w/ PG, the other w/ MySQL)
3. configure the file db.ini with your appropriate ENGINE, USER, HOST, PASSWORD, DATABASE values - if yer using postgres, you can optionally define SCHEMA and download directory
   valid values for ENGINE are valid sqlalchemy engines e.g. 'mysql', 'postgresql' or 'sqlite'
   if you have your server configured to allow passwordless connections, you don't need to define USER and PASSWORD
   if you are using sqlite3, 'database' in the config should be the path to your database file
   specify directory for retrosheet files to be downloaded to, needs to exist before script runs
4. run download.py to download the files from retrosheet's servers
5. run parse.py to parse the files and insert the data into the database
